{
  "mcpServers": {
    "@21st-dev/magic": {
      "args": [
        "-y",
        "@21st-dev/magic@latest"
      ],
      "env": {
        "API_KEY": "$MAGIC_UI_API_KEY"
      },
      "autoApprove": [
        "21st_magic_component_builder",
        "logo_search",
        "21st_magic_component_inspiration",
        "21st_magic_component_refiner"
      ],
      "command": "npx"
    },
    "sequential-thinking": {
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "command": "npx",
      "autoApprove": [
        "sequentialthinking"
      ],
      "disabled": false
    },
    "github": {
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "GITHUB_PERSONAL_ACCESS_TOKEN",
        "--name",
        "github-mcp-server",
        "ghcr.io/github/github-mcp-server"
      ],
      "disabled": false,
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": ""
      },
      "command": "docker",
      "autoApprove": [
        "add_issue_comment",
        "add_pull_request_review_comment_to_pending_review",
        "assign_copilot_to_issue",
        "create_and_submit_pull_request_review",
        "create_branch",
        "create_issue",
        "create_or_update_file",
        "create_pending_pull_request_review",
        "create_pull_request",
        "create_repository",
        "delete_file",
        "delete_pending_pull_request_review",
        "dismiss_notification",
        "fork_repository",
        "get_code_scanning_alert",
        "get_commit",
        "get_file_contents",
        "get_issue",
        "get_issue_comments",
        "get_me",
        "get_notification_details",
        "get_pull_request",
        "get_pull_request_comments",
        "get_pull_request_diff",
        "get_pull_request_files",
        "get_pull_request_reviews",
        "get_pull_request_status",
        "get_secret_scanning_alert",
        "get_tag",
        "list_branches",
        "list_code_scanning_alerts",
        "list_commits",
        "list_issues",
        "list_notifications",
        "list_pull_requests",
        "list_secret_scanning_alerts",
        "list_tags",
        "manage_notification_subscription",
        "manage_repository_notification_subscription",
        "mark_all_notifications_read",
        "merge_pull_request",
        "push_files",
        "request_copilot_review",
        "search_code",
        "search_issues",
        "search_repositories",
        "search_users",
        "submit_pending_pull_request_review",
        "update_issue",
        "update_pull_request",
        "update_pull_request_branch"
      ]
    },
    "shadcn": {
      "args": [
        "-y",
        "shadcn@canary",
        "registry:mcp"
      ],
      "disabled": false,
      "env": {
        "REGISTRY_URL": "https://tweakcn.com/r/themes/registry.json"
      },
      "command": "npx",
      "autoApprove": [
        "init",
        "get_items",
        "get_item",
        "add_item"
      ]
    },
    "context7": {
      "autoApprove": [
        "resolve-library-id",
        "get-library-docs"
      ],
      "url": "https://mcp.context7.com/mcp"
    },
    "git": {
      "args": [
        "mcp-server-git"
      ],
      "autoApprove": [
        "git_status",
        "git_diff_unstaged",
        "git_diff_staged",
        "git_diff",
        "git_commit",
        "git_add",
        "git_reset",
        "git_log",
        "git_create_branch",
        "git_checkout",
        "git_show"
      ],
      "command": "uvx"
    },
    "memory": {
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory@latest"
      ],
      "command": "npx",
      "env": {
        "MEMORY_FILE_PATH": "/home/yash/.dotfiles/nvim/.config/nvim/mcp/memory.json"
      }
    }
  },
  "nativeMCPServers": {
    "neovim": {
      "autoApprove": [
        "execute_lua",
        "execute_command",
        "read_file",
        "delete_item",
        "move_item",
        "find_files",
        "list_directory",
        "write_file",
        "replace_in_file"
      ]
    },
    "mcphub": {
      "autoApprove": [
        "get_current_servers",
        "toggle_mcp_server"
      ]
    }
  }
}